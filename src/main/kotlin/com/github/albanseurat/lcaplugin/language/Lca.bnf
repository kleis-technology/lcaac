{
  parserClass="com.github.albanseurat.lcaplugin.language.parser.LcaParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Lca"
  psiImplClassSuffix="Impl"
  psiPackage="com.github.albanseurat.lcaplugin.psi"
  psiImplPackage="com.github.albanseurat.lcaplugin.psi.impl"

  elementTypeHolderClass="com.github.albanseurat.lcaplugin.psi.LcaTypes"
  elementTypeClass="com.github.albanseurat.lcaplugin.psi.LcaElementType"
  tokenTypeClass="com.github.albanseurat.lcaplugin.psi.LcaTokenType"

  mixin("dataset_definition")="com.github.albanseurat.lcaplugin.language.psi.mixin.DatasetDefinitionMixin"
  implements("dataset_definition")="com.intellij.psi.PsiNameIdentifierOwner"

  mixin("input_exchange")="com.github.albanseurat.lcaplugin.language.psi.mixin.InputExchangeMixin"
  implements("input_exchange")="com.github.albanseurat.lcaplugin.language.psi.PsiExchangeElement"

  mixin("product_exchange")="com.github.albanseurat.lcaplugin.language.psi.mixin.ProductExchangeMixin"
  implements("product_exchange")="com.github.albanseurat.lcaplugin.language.psi.PsiExchangeElement"

  mixin("quantity")="com.github.albanseurat.lcaplugin.language.psi.mixin.QuantityMixin"
  implements("quantity")="com.github.albanseurat.lcaplugin.language.psi.PsiUnitElement"

  parserUtilClass="com.github.albanseurat.lcaplugin.language.parser.QuantityParser"

  tokens=[
      DATASET_KEYWORD= 'dataset'
      INPUTS_KEYWORD = 'inputs'
      PRODUCTS_KEYWORD = 'products'
      RESOURCES_KEYWORD = 'resources'
      EMISSIONS_KEYWORD = 'emissions'
      META_KEYWORD = 'meta'
      IDENTIFIER = "regexp:\w+"
      UNIT = "regexp:\w+"
      NUMBER = "regexp:\d+"
      LBRACE = 'left-bracket'
      EQUALS = 'equals'
      RBRACE = 'right-bracker'
      LIST_ITEM = 'list'
      LSTRING = 'lstring'
      RSTRING = 'rstring'
      SPACE = "regexp:\s+"
  ]
}

lcaFile ::= dataset_definition*

dataset_definition ::= DATASET_KEYWORD IDENTIFIER LBRACE dataset_body RBRACE

dataset_body ::= (products | inputs | resources | emissions)* metadata?

inputs ::= INPUTS_KEYWORD LBRACE input_exchange* RBRACE

products ::= PRODUCTS_KEYWORD LBRACE product_exchange* RBRACE

resources ::= RESOURCES_KEYWORD LBRACE bio_exchange* RBRACE

emissions ::= EMISSIONS_KEYWORD LBRACE bio_exchange* RBRACE

metadata ::= META_KEYWORD LBRACE property* RBRACE

input_exchange ::= exchange

product_exchange ::= exchange

bio_exchange ::= exchange

property ::= IDENTIFIER EQUALS string

private exchange ::= LIST_ITEM IDENTIFIER NUMBER <<parseQuantity>> {recoverWhile="next_exchange"}

private next_exchange ::= !(LIST_ITEM | RBRACE)

private next_dataset ::= !DATASET_KEYWORD

private string ::= LSTRING STRING* RSTRING {pin=1}

quantity ::= UNIT

